\section{Der Aufbau der  XML-Datei}\label{sec:xml-structure} 

Der gesamte Inhalt einer Tourbeschreibung wird in einer XML-Datei abgelegt.
Ich werde in diesem Kapitel detailliert beschreiben, wie diese Datei aufgebaut
ist.

Das Wissen um den Aufbau dieser Datei ist aus zwei Gr"unden notwendig:
\begin{enumerate}
\item Solange wir keine grafische Schnittstelle zur Erfassung besitzen, mu"s
      man diese Datei per Hand erfassen. Dazu mu"s man nat"urlich wissen, wie
      sie aufgebaut ist.
\item Auch wenn wir irgenwann eine grafische Schnittstelle haben, mu"s ein(e)
      Entwickler(in), die/der das System erweitern will, wissen, wie der Aufbau
      nun exakt aussieht\footnote{Ok, es existiert eine dokumentierte DTD, aber 
      das nur am Rande\ldots}.
\end{enumerate}

Sieht man sich die XML-Datei das erste Mal an, dann schaut das alles recht 
komplex und konfus aus. Aber, ehrlich, so schwierig ist das alles gar nicht.
Fangen wir mal an\ldots

\textit{Anm.: In den XML-Beispielen sind Zeilennummern ergaenzt. Diese geh"oren 
nat"urlich \textbf{nicht} in die echte Datei!
}

\subsection{<tourguide>}

Die gesamte Tourbeschreibung wird in zwischen dem "offnenden und dem
schlie"senden \texttt{<tourguide>}-Tag eingeschlo"sen. Das Ganze sieht also
so aus:

\lstset{numbers=left,numberstyle=\tiny,stepnumber=1}
\begin{lstlisting}{}
<tourguide>
   <storage-info>
      <location />
   </storage-info>
   <general>
      ...
   <general>
   <crosspoints>
      ...
   </crosspoints>
<tourguide>
\end{lstlisting}

Im Wesentlich haben wir also drei Abschnitte:
\begin{enumerate}
\item <storage-info>
\item <general>
\item <crosspoints>
\end{enumerate}

Alle Abschnitte werden nachfolgenden genauer beleuchtet. Der
Wichtigste is \texttt{<crosspoints>}, da er die eigentlich
Beschreibung der Tour beinhaltet. Wozu sind aber die anderen
da? Fangen wir an mit\ldots

\subsection{<storage-info> (<location>)}
Wie schon erw"ahnt erfassen wir ja unsere Tour nicht f"ur uns 
selbst: Wir kennen sie ja schon. Sondern f"ur andere.

Mal angenommen du wohnst in Hamburg und f"ahrst "ubers Wochende
nach Buttenheim in Bayern (das MTB ist nat"urlich dabei). Am
Samstag h"attest du gute drei Stunde Zeit 'ne kleine Tour zu
fahren. Gibt's da bekannte Touren?

W"are jetzt nett, einfach ins Internet zu gehen. Das dir 
bekannte Interface zu benutzen und mal zu gucken, was da in
Buttenheim so geht.

Genau daf"ur ist das Tag \texttt{<storage-info><location></storage-info>}
vorhanden. Wie? Schauen wir uns das mal an:

\lstset{numbers=left,numberstyle=\tiny,stepnumber=1}
\begin{lstlisting}{}
<tourguide>
   <storage-info>
      <location 
          country="de" 
          region-or-state="Bavaria" 
          city="Buttenheim" 
          zip-code="96155"/>
   </storage-info>
   ...
<tourguide>
\end{lstlisting}

Alles klar? Alle Infos werden mithilfe der Attribute des Tags
\texttt{<location>} erfa"st. Wie werden diese Attribute nun 
zur Suche benutzt? Sorry, das ist (noch?) nicht Aufgabe dieses
Projekts. Sie sind erstmal da. Es liegt nun an demjenigen, der
die Suchfunktion implementiert, wie clever die erfassten Daten
genutzt werden.

Eine kurze Anmerkung zum Attribut \texttt{country}: Es sollten
die sogenannten Top Level Domains (wie sie aus dem Internet
bekannt sind) verwendet werden. Ein einfacheres und bekannteres 
System zur Angabe von L"andern existiert praktisch nicht.

\subsection{<general>}

\subsection{<crosspoints>}